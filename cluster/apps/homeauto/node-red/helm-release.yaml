---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: homeauto
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: node-red
      version: 7.3.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: nodered/node-red
      pullPolicy: IfNotPresent
      # tag: 1.2.5

    strategy:
      type: Recreate

    # See more environment varaibles in the node-red documentation
    # https://nodered.org/docs/getting-started/docker
    env:
      TZ: America/Chicago
      # NODE_OPTIONS:
      # NODE_RED_ENABLE_PROJECTS:
      # NODE_RED_ENABLE_SAFE_MODE:
      # FLOWS:

    service:
      port:
        port: 1880

    persistence:
      data:
        enabled: true
        emptyDir: false
        mountPath: /data
        existingClaim: nfs-data-nodered-claim

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
        nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
        nginx.ingress.kubernetes.io/auth-url: "https://sso.${SECRET_DOMAIN}/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://sso.${SECRET_DOMAIN}/oauth2/start?rd=https://$host$request_uri"
      hosts:
        - host: "nodered.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: nodered-prod-tls
          hosts:
            - "nodered.${SECRET_DOMAIN}"